WEBVTT

0
00:01.390 --> 00:03.370
Transaktionen und Trigger.

1
00:03.370 --> 00:04.950
Halten Sie Ihre Daten konsistent.

2
00:06.690 --> 00:07.610
Transaktionen.

3
00:07.800 --> 00:13.050
Transaktionen sind die Art und Weise von SQL, einen Alles-oder-Nichts-Ansatz zum Ändern Ihrer Daten zu erzwingen.

4
00:13.050 --> 00:18.480
Sie bieten eine Möglichkeit, einen Vorgang im Falle eines Fehlers oder Fehlers zurückoder rückgängig zu machen.

5
00:20.500 --> 00:26.050
Das klassische Beispiel ist, wenn Sie eine Bank waren und Sie in Barüberweisung zwischen zwei Konten ausführen

6
00:26.350 --> 00:30.520
aber es besteht die Gefahr eines plötzlichen Stromausfalls, der Ihre Systeme zum Absturz bringen würde.

7
00:30.520 --> 00:35.440
Wissen, Ihr Glück der Stromausfall würde nur in diesem Moment zwischen der Abbuchung der Quelle passieren

8
00:35.440 --> 00:38.350
Konto und gutschrift das Zielkonto.

9
00:38.470 --> 00:44.020
In diesem Fall ziehen Sie es vor, die Geldüberweisung zurückzurollen, so dass sie

10
00:44.020 --> 00:46.080
das verlorene Geld zu haben.

11
00:46.270 --> 00:48.720
Transaktionen fungieren zu diesem Zweck als Sicherheitsnetz.

12
00:51.330 --> 00:53.540
Implizite Transaktionen.

13
00:53.540 --> 00:59.270
Jeder einzelne Anweisungsvorgang in SQL wird implizit in eine Transaktion eingeschlossen.

14
00:59.270 --> 01:05.210
Dies bedeutet, dass der Server abstürzt, wenn Sie ein großes Update ausführen und den Vorgang zur Hälfte des Vorgangs durchführen.

15
01:05.210 --> 01:09.380
Sobald Sie die Stromversorgung wiederhergestellt haben, scheint es, als ob das Update nie ausgeführt wurde.

16
01:09.410 --> 01:11.480
Anstatt eine halb abgeschlossene Operation zu sehen

17
01:14.350 --> 01:20.940
Videodemonstration; Hier fügen Sie der Bücherregaltabelle eine neue Zeile hinzu, die einen Zustand angibt, in dem sich das Buch befindet.

18
01:20.940 --> 01:26.210
zurückgezogen und nicht in der Bibliothek; wenn Sie der Buchleihtabelle eine Zeile hinzufügen.

19
01:26.220 --> 01:31.530
Wir werden auch die Büchertabelle aktualisieren, um anzuzeigen, dass sich das Buch nicht mehr in der Bibliothek befindet.

20
01:31.650 --> 01:38.180
Wir werden Transaktionen verwenden, um uns vor zwei Eventualitäten zu schützen; Ein Verbindungsfehler in der Mitte des Betriebs

21
01:39.230 --> 01:43.570
oder ein Fehler, bei dem ein ungültiges Datum in der Insert-Anweisung verwendet wurde.

22
01:46.470 --> 01:52.320
OK; Hier werden wir transaktionen und ihren Alles-oder-Nichts-Ansatz zur Änderung von Daten demonstrieren

23
01:52.380 --> 01:54.720
innerhalb der Datenbank.

24
01:54.990 --> 02:02.040
Wir fügen der Bücherregaltabelle eine neue Zeile hinzu, die einen Status namens "Zurückgezogen" angibt, der

25
02:02.340 --> 02:04.760
dass sich das Buch nicht mehr in der Bibliothek befindet.

26
02:04.830 --> 02:06.810
Also machen wir das zuerst.

27
02:06.810 --> 02:13.390
Wählen Sie * aus dem Bücherregal aus.

28
02:13.630 --> 02:17.950
Wir haben derzeit nur ein Regal in der Datenbank; also werden wir eine neue hinzufügen; 

29
02:17.950 --> 02:25.330
In BookShelf-Werte (Standort) einfügen ('Withdrawn')

30
02:31.810 --> 02:32.620
Schauen wir uns unser Bücherregal noch einmal an.

31
02:33.990 --> 02:40.190
Okay, also habe ich einen Ausweis von 7 für Withdrawn; in Ihrem Fall -

32
02:40.360 --> 02:42.530
Es wird wahrscheinlich zwei oder andere sein.

33
02:42.530 --> 02:43.110
Anzahl

34
02:43.490 --> 02:45.100
Es sind also sieben für mich.

35
02:45.100 --> 02:48.360
Denken Sie also daran.

36
02:48.670 --> 02:53.230
Jetzt werden wir als nächstes unsere Büchertabelle mit diesem neuen Zustand konsistent machen.

37
02:53.440 --> 02:57.920
Also schauen wir uns unsere ausstehenden Kredite an.

38
02:57.920 --> 03:00.880
Bookloan

39
03:00.910 --> 03:03.000
Wir haben ein ausstehendes Darlehen für Book ID 1

40
03:03.010 --> 03:06.010
Schauen wir uns unsere Büchertabelle an

41
03:13.990 --> 03:14.680
Okay.

42
03:14.730 --> 03:24.200
Und wir werden Buch-ID 1 mit Bücherregal-ID 7 so aktualisieren;

43
03:24.210 --> 03:31.550
Update-Bücher setzen BookShelfId=7, wobei id=1

44
03:32.250 --> 03:33.980
Nun, um dies ein wenig klarer zu machen.

45
03:33.980 --> 03:40.160
Wir werden einen Join auf dem Bücherregaltisch machen; 

46
03:40.260 --> 03:41.550
bookShelf bs auf bs.id = b.bookShelfId beitreten

47
03:42.170 --> 03:44.710
bookShelf bs auf bs.id = b.bookShelfId beitreten

48
03:47.500 --> 03:53.770
OK so können wir in diesem Zustand sehen, dass von den drei Büchern in unserer Bibliothek eines zurückgezogen wird und zwei auf

49
03:53.770 --> 03:55.000
das Regal neben dem Fenster.

50
03:56.470 --> 04:06.210
Hier werden wir zeigen, wie wir eine Transaktion durchführen, bei der wir einen neuen Kredit ausführen, der

51
04:06.210 --> 04:13.800
zwei Operationen umfassen; eine In die Buch-Leihe-Tabelle und zwei; Aktualisieren der Büchertabelle

52
04:13.800 --> 04:15.840
zu sagen, dass der Standort jetzt zurückgezogen ist.

53
04:16.290 --> 04:16.710
Also

54
04:20.740 --> 04:22.590
wir arbeiten in der Regel wie folgt.

55
04:22.590 --> 04:23.520
Wir werden aktualisieren

56
04:26.550 --> 04:36.370
Aktualisieren Bücher setzen bookShelfId=7 wo id=1

57
04:37.440 --> 04:40.050
Und wir wollen;

58
04:42.840 --> 04:47.130
in bookloan einfügen ..

59
04:53.570 --> 04:56.530
Schauen wir uns die Buchleihe für eine Sekunde an

60
04:59.800 --> 05:02.980
in bookloan(StudentId, BookId, DateWithdrawn, DateDue ) Werte einfügen (

61
05:03.450 --> 05:04.650
in bookloan(StudentId, BookId, DateWithdrawn, DateDue ) Werte einfügen (

62
05:06.570 --> 05:11.080
Stellen wir uns vor, es ist Student I.D. 3; dieselbe Person.

63
05:11.260 --> 05:13.590
Buch ID 2

64
05:19.120 --> 05:28.390
Datum zurückgezogen 

65
05:28.850 --> 05:30.770
und Datedue zurück

66
05:33.920 --> 05:38.260
Um einen Rückzug durchzuführen, ginge es darum, diese beiden Operationen durchzuführen.

67
05:38.270 --> 05:41.050
Wir aktualisieren die Büchertabellen; Die Bücherregal-ID entspricht also zwei.

68
05:41.150 --> 05:44.420
Dann legen wir in den Bücherleihtisch ein.

69
05:44.600 --> 05:53.270
Was würde nun in dieser Situation geschehen, in der wir hier etwas Drastisches tun würden; dass es

70
05:53.270 --> 06:05.430
ein Stromausfall; nur in diesem Moment zwischen dem Update und dem Einfügen; Unter diesen Umständen würde dies bedeuten,

71
06:05.940 --> 06:08.160
dass die Büchertabelle aktualisiert wird.

72
06:08.520 --> 06:10.620
So wird das Buch zurückgezogen

73
06:11.160 --> 06:16.310
Eine entsprechende Bucheinlage in den Buchausleihtisch würde es jedoch nicht geben.

74
06:16.560 --> 06:21.570
Dies wäre ein großes Problem, weil es bedeutet, dass wir nicht mehr sagen konnten, wo dieses Buch war, weil

75
06:22.080 --> 06:26.880
es sagt, dass es zurückgezogen wurde, aber es wird keinen entsprechenden Buchkredit geben; und effektiv wäre dieses Buch

76
06:26.880 --> 06:27.540
Verloren.

77
06:28.770 --> 06:30.830
Hier kommen Transaktionen ins Spiel

78
06:33.780 --> 06:36.620
So geben Sie "Transaktion beginnen" ein

79
06:43.760 --> 06:47.410
wenn die Transaktion beginnt; und Commit-Transaktion

80
06:51.740 --> 06:53.300
wenn die Transaktion endet

81
06:57.580 --> 06:59.580
um dies zu demonstrieren.

82
06:59.680 --> 07:06.420
Was ich tun werde, ist nach dem Moment des Stromausfalls, ich werde diese beiden Zeilen kommentieren

83
07:09.980 --> 07:13.860
zu sagen, dass nach dem Stromausfall nichts funktioniert.

84
07:13.880 --> 07:21.360
Die Datenbank ist tot; also führe ich dies aus; Es heißt, dass eine Zeile betroffen ist.

85
07:22.110 --> 07:26.820
Aber lassen Sie uns unsere Datenbank zurücksetzen und sehen, was mit der Büchertabelle passiert.

86
07:34.400 --> 07:41.180
Dies ist also, dass unsere Datenbank effektiv ausgeschaltet und wieder eingeschaltet wird, als wäre es eine Macht

87
07:41.200 --> 07:46.490
geschnitten; Wir öffnen eine neue Abfrage und werfen einen Blick auf unsere Buchtabelle

88
07:52.400 --> 07:54.660
in der Datenbank, Bibliothek.

89
07:57.020 --> 08:02.610
Und jetzt, wie Sie sehen können, obwohl ich diese SQL-Anweisung ausgeführt habe.

90
08:02.610 --> 08:06.270
Aktualisieren Sie Bücher set bookshelfID = 7 wobei ID = 2.

91
08:08.100 --> 08:13.500
Daran hat sich nichts geändert; so effektiv bedeutet, dass diese Transaktion nicht

92
08:13.650 --> 08:15.710
sie wurde nicht durchgeführt.

93
08:18.880 --> 08:27.050
Jetzt in einem normalen Umstand, wo es keinen Stromausfall gibt; wir kommentieren die Leistungsschnittanzeige ..

94
08:27.070 --> 08:30.360
Diese beiden Zeilen zu kommentieren, und führen Sie diese Transaktion erneut aus.

95
08:32.360 --> 08:34.160
Zwei Zeilen sind betroffen.

96
08:34.160 --> 08:39.510
Werfen wir einen Blick auf unsere Bücher Tabelle; Die Tabelle "Bücher" zeigt an, dass zwei Bücher zurückgezogen wurden.

97
08:40.940 --> 08:44.120
Auf dem Buchleihtisch zeigt an, dass zwei Bücher zurückgezogen werden.

98
08:44.150 --> 08:47.100
Wir sind also vollkommen konsequent.

99
08:47.210 --> 08:53.000
Jetzt denken Sie vielleicht, dass es sehr unwahrscheinlich ist, dass ein Stromausfall im Augenblick passieren würde

100
08:53.030 --> 09:03.250
zwischen diesen beiden Aussagen. Simulieren wir also einen viel wahrscheinlicheren Umstand, in dem wir

101
09:03.250 --> 09:11.650
sagen, dass es ein Problem mit dem Benutzercode gibt, daher versucht jemand, ein Buch auf

102
09:11.650 --> 09:15.660
31. Februar, der kein Datum ist.

103
09:16.200 --> 09:24.820
Nun ändern wir auch die Buch-ID zu Demonstrationszwecken in Buch ID 3.

104
09:24.820 --> 09:31.320
Buch ID 3;  Wählen * aus Büchern

105
09:34.840 --> 09:36.440
Es ist Buch ID 3.

106
09:36.520 --> 09:36.790
Okay.

107
09:36.820 --> 09:41.330
Unter diesen Umständen werden wir die Transaktion ausführen.

108
09:41.360 --> 09:48.400
Nun bedenken Sie, dass diese Aussage ohne diese Transaktion ausgeführt würde;

109
09:48.420 --> 09:52.150
Update-Bücher setzen BookShelfId=6, wobei Id=3

110
09:52.250 --> 10:00.320
Dies würde das dritte Buch zurückziehen, aber die Einlage in die Buch-Leihtisch würde scheitern, weil es

111
10:00.320 --> 10:02.430
ist kein Datum am 31. Februar.

112
10:02.750 --> 10:08.990
Diese Aussage würde also scheitern; Verlassen der Datenbank in einem inkonsistenten Zustand, da die Bücher

113
10:08.990 --> 10:13.460
Tabelle würde sagen, dass das Buch zurückgezogen wurde, während das Buchdarlehen etwas anderes sagen würde.

114
10:14.440 --> 10:16.200
Jedoch innerhalb einer Transaktion.

115
10:16.250 --> 10:19.170
Mal sehen, was passiert; Ausführen.

116
10:20.020 --> 10:26.380
Wie erwartet gibt es hier eine Fehlermeldung, die besagt, dass die Konvertierung beim Konvertieren von Datum und Oder-Zeit fehlgeschlagen ist.

117
10:26.410 --> 10:28.150
aus der Zeichenkette.

118
10:28.180 --> 10:34.900
Dies ist wie erwartet; 31. Februar existiert nicht, so dass nur nicht einfügen.

119
10:35.020 --> 10:40.030
Das Sehr Wichtige dabei ist jedoch, dass die Büchertabelle nicht aktualisiert wurde.

120
10:40.730 --> 10:46.860
Wir führen dies durch und wir können sehen, dass der Standort immer noch auf 1 festgelegt ist.

121
10:46.870 --> 10:51.090
Auf diese Weise wird die Datenbank durch Transaktionen in einem konsistenten Zustand gespeichert.

122
10:53.190 --> 11:00.270
Auslöser; Trigger sind SQL-Anweisungen, die als Reaktion auf Datenänderungen ausgeführt werden, die

123
11:00.270 --> 11:06.510
verwendet, um sicherzustellen, dass eine Änderung in einer Tabelle eine Änderung in einer anderen Tabelle auslösen kann, können Trigger ausgeführt werden

124
11:06.510 --> 11:09.810
als Reaktion auf das Einfügen von Aktualisierungs- oder Löschanweisungen

125
11:12.450 --> 11:13.970
Video-Demonstration.

126
11:14.400 --> 11:20.070
Hier folgt eine Demonstration, bei der wir eine Tabelle mit dem Namen Bookchanges erstellen werden, die Aktualisierungen aufzeichnet.

127
11:20.070 --> 11:28.110
durch die Verwendung von Triggern an die Büchertabelle. Ein Insert-Trigger zum Aufzeichnen neuer Bücher, die der Bibliothek hinzugefügt werden

128
11:28.920 --> 11:35.910
Ein Aktualisierungstrigger zum Aufzeichnen von Änderungen an vorhandenen Büchern und ein Löschtrigger zum Entfernen von Büchern

129
11:35.910 --> 11:36.570
aus der Bibliothek.

130
11:39.440 --> 11:46.660
Hier werden wir Trigger demonstrieren; wo wir eine Tabelle mit dem Namen Bookchanges und

131
11:46.700 --> 11:55.480
In dieser Tabelle werden Aktualisierungen der Buchtabelle mithilfe von Triggern aufzeichnet. Lassen Sie uns also zuerst die

132
11:55.480 --> 12:00.760
Bookchanges-Tabelle.

133
12:04.160 --> 12:14.270
Create-Tabelle BookChanges ( id int identity(1,1) nicht null,

134
12:14.290 --> 12:22.340
Dadurch wird auch die Buch-ID aufzeichnet, die ein int sein wird, Der Änderungstyp, der varchar(max) sein wird

135
12:23.900 --> 12:28.050
und wird auch das Datum und die Uhrzeit notieren.

136
12:28.120 --> 12:30.730
Das ist tatsächlich geschehen; also nennen wir es dateOccurred

137
12:34.100 --> 12:40.400
Wir können natürlich das Datum in jede Einfügung in diese BookChanges-Tabelle einfügen, aber hier ist eine Abkürzung

138
12:40.580 --> 12:44.050
wo wir eingeben können : datetime default getdate()

139
12:44.050 --> 12:50.530
das bedeutet, wenn in der Insert-Anweisung kein Datum angegeben wird.

140
12:50.530 --> 12:55.500
Der Standardwert getdate(), der das aktuelle Datum und die aktuelle Uhrzeit ist, wird eingefügt.

141
12:55.990 --> 12:59.560
Also werden wir die Tabelle "Bücherwechsel" erstellen.

142
13:01.040 --> 13:04.580
Werfen wir einen Blick auf die Tabelle "Buchänderungen". die derzeit leer sein werden.

143
13:10.100 --> 13:11.630
Leer.

144
13:11.660 --> 13:15.620
Lassen Sie uns nun einen Trigger erstellen. Trigger erstellen

145
13:18.960 --> 13:22.740
und wir werden nun den Namen für den Auslöser verwenden.

146
13:22.860 --> 13:25.860
Nennen Sie es also trgBookInsert

147
13:26.250 --> 13:26.850
Nennen Sie es also trgBookInsert

148
13:30.660 --> 13:49.740
auf Büchern nach dem Einfügen als

149
13:49.910 --> 13:52.480
Einfügen in BookChanges (BookId, ChangeType) 

150
13:56.130 --> 14:05.080
jetzt; Dieser Trigger hat Zugriff auf eine virtuelle Tabelle namens Eingefügt, die die Einfügung aus dem

151
14:05.080 --> 14:06.880
vorherige Erklärung.

152
14:07.280 --> 14:08.850
Welchen Fall kann ich verwenden.

153
14:08.920 --> 14:21.260
id auswählen, 'Eingefügt' von INSERTED

154
14:21.740 --> 14:24.190
Ich kann diesen Trigger nun wie folgt erstellen.

155
14:28.190 --> 14:36.150
Wenn wir nun versuchen, in die Büchertabelle einzufügen, wird dieser Trigger ausgelöst.

156
14:36.510 --> 14:37.950
Werfen wir also einen Blick auf unsere Büchertabelle.

157
14:45.240 --> 14:48.560
Okay, jetzt fügen wir ein weiteres Harry Potter Buch hinzu.

158
14:51.780 --> 14:59.940
in Die Werte "Büchername, Seiten, BookShelfId" einfügen ('

159
15:01.310 --> 15:10.210
"Harry Potter zum Stein der Weisen"

160
15:18.760 --> 15:25.090
Um einen Apostroph zu passieren, musste ich einen doppelten Apostroph passieren, so entkommen Sie Apostrophe in SQL Server

161
15:26.150 --> 15:31.320
Ich denke, es gibt etwa 607 Seiten, Bücherregal ID 1

162
15:35.490 --> 15:41.690
Ich füge in die Büchertabelle ein und stelle fest, dass die beiden Zeilen nun eingefügt wurden.

163
15:42.540 --> 15:45.200
Werfen wir also einen Blick auf unsere Büchertabelle.

164
15:45.250 --> 15:47.010
Wir sehen den Stein der Weisen.

165
15:48.760 --> 15:50.920
Werfen wir auch einen Blick auf die Tabelle "Buchänderungen".

166
15:55.530 --> 16:02.250
SELECT * aus Buchänderungen ; und wir können sehen, dass die Buch-ID 7 zu diesem Zeitpunkt eingefügt wurde.

167
16:03.660 --> 16:04.000
Okay.

168
16:06.250 --> 16:12.510
Das ist also ein Insert-Trigger.

169
16:12.580 --> 16:21.670
Der nächste Schritt ist also der Nachweis eines Löschtriggers. wo wir die Handlung eines gelöschten Buches aufzeichnen.

170
16:21.670 --> 16:25.240
Schauen wir uns unsere Büchertabelle noch einmal an.

171
16:25.550 --> 16:28.960
Stellen wir uns vor, wir möchten Das Buch Nummer 7 löschen.

172
16:30.500 --> 16:32.270
Sie erstellen also einen Trigger.

173
16:32.330 --> 16:45.120
Lassen Sie uns also diesen Trigger kopieren; so ändern wir uns;  wir rufen den Trigger nach dem Löschen als trgBookDelete auf

174
16:45.120 --> 16:45.870
Der Status wird gelöscht.

175
16:49.370 --> 16:51.260
Und die virtuelle Tabelle wird als gelöscht bezeichnet

176
16:54.370 --> 17:01.440
so dass dieser Trigger erstellt wird; schauen Sie sich jetzt unsere Büchertabelle noch einmal an.

177
17:01.940 --> 17:03.880
Und wir werden dieses Buch löschen.

178
17:03.930 --> 17:04.650
Löschen aus Büchern, in denen id=7

179
17:07.420 --> 17:08.710
Löschen aus Büchern, in denen id=7

180
17:09.570 --> 17:18.640
Wir führen diese Anweisung aus, und wir können sehen, dass die beiden Zeilen betroffen sind.

181
17:18.680 --> 17:25.670
Eine Zeile, in der das gelöschte Buch und die zweite Zeile die Zeile ist, die in das Buch eingefügt wird, ändert sich

182
17:25.670 --> 17:26.680
Tabelle.

183
17:26.810 --> 17:30.920
Werfen wir einen Blick auf unsere bookChanges Tabelle. Wählen * aus bookChanges

184
17:34.390 --> 17:39.310
und wir können jetzt sehen, dass die Buch-ID 7 jetzt gelöscht wurde

185
17:42.840 --> 17:47.250
der dritte und letzte Triggertyp ist der aktualisierte Trigger.

186
17:47.370 --> 17:51.840
Dies wird ausgelöst, wenn eine Zeile aktualisiert wird.

187
17:51.840 --> 17:54.240
Lassen Sie uns dies also noch einmal demonstrieren.

188
17:54.340 --> 18:07.620
so werden wir diesen Code kopieren und wir nennen ihn 
trgBookUpdate auf Bücher nach der Aktualisierung; der Änderungstyp wird

189
18:07.620 --> 18:19.230
"Update" sein und die virtuelle Tabelle eingefügt wird; wir werden diesen Auslöser schaffen.

190
18:19.490 --> 18:21.800
Werfen wir nun noch einmal einen Blick auf unsere Büchertabelle.

191
18:26.680 --> 18:33.880
Stellen wir uns nun vor, wir möchten die Seitenzahl der winzigen hübschen Dinge auf 437 ändern, anstatt 

192
18:33.950 --> 18:34.720
438

193
18:35.860 --> 18:47.950
Also; Aktualisierungsbücher legen Seiten fest=437 wobei ID=3 ; und führen Sie die Anweisung aus; Zwei Zeilen sind betroffen

194
18:48.240 --> 18:54.460
eine ist die Aktualisierung auf der Büchertabelle und eine die Einfügung in die Buchwechseltabelle.

195
18:54.480 --> 18:56.320
Werfen wir jetzt einen Blick auf unsere Bücherwechseltabelle.

196
19:02.010 --> 19:07.960
da gehen wir; Wir haben jetzt eine dritte Zeile in der Änderungstabelle, die angibt, dass ein Buch aktualisiert wurde.

197
19:11.330 --> 19:20.920
"anstelle von" Triggern;  Trigger können auf zwei Arten entweder "nach" oder "anstelle von" betrieben werden;  "after" erlaubt die Anweisung

198
19:20.920 --> 19:28.560
ausgeführt werden und dann den Trigger ausführen; "instead of" verhindert die Ausführung der Anweisung, führt aber den Trigger aus. 

199
19:28.560 --> 19:37.400
Video-Demonstration;  Hier zeigen wir einen "anstelle von" Auslöser.

200
19:37.400 --> 19:42.680
Wir verwenden einen Löschtrigger "anstelle von", um zu verhindern, dass Zeilen aus der Tabelle bookChanges gelöscht werden.

201
19:43.200 --> 19:46.190
und zeigen Stattdessen eine Warnung an.

202
19:46.970 --> 19:53.270
Okay, hier werden wir demonstrieren und anstatt Trigger zu löschen, die Zeilen nicht gelöscht werden

203
19:53.270 --> 19:56.030
aus der Bookchanges-Tabelle und zeigen stattdessen eine Warnung an.

204
19:56.660 --> 19:59.360
Lassen Sie uns also einen Trigger erstellen.

205
19:59.740 --> 20:06.200
Trigger trgPreventDelete für bookChanges erstellen

206
20:09.060 --> 20:09.940
Trigger trgPreventDelete für bookChanges erstellen

207
20:13.050 --> 20:24.080
Anstatt als zu löschen;  in diesem Fall werde ich nur eine Warnung drucken und keine weiteren Maßnahmen ergreifen.

208
20:24.200 --> 20:27.560
So könnte ich verwenden; 

209
20:28.050 --> 20:28.400
Drucken 'Warnung: Sie dürfen nicht aus der Buchänderungstabelle löschen'

210
20:31.250 --> 20:41.550
Diese bestimmte Drucknachricht ist nur sichtbar

211
20:41.550 --> 20:43.710
, um die Benutzer der Datenbank zu leiten.

212
20:46.460 --> 20:49.140
Das ist also unser Auslöser.

213
20:49.140 --> 20:51.480
Werfen wir also einen Blick auf die Tabelle "Buchänderungen".

214
21:00.360 --> 21:00.780
Okay.

215
21:00.880 --> 21:02.440
Wir haben drei Reihen.

216
21:02.650 --> 21:10.810
Versuchen wir nun, zu löschen; aus Buchänderungen löschen, wobei id = 1.

217
21:14.410 --> 21:19.030
Jetzt sehen wir eine Warnung, die besagt, dass Sie nicht aus der Tabelle mit den Buchänderungen löschen dürfen.

218
21:19.960 --> 21:21.660
Sehen wir uns die Tabelle "Änderungen" ihres Buches an.

219
21:27.170 --> 21:29.220
Alle drei Reihen sind noch da.

220
21:29.220 --> 21:35.480
Dasselbe gilt für das Löschen von allem in der Tabelle sagt noch eine Warnung.

221
21:35.720 --> 21:37.280
Die Zeilen sind noch da.

222
21:37.280 --> 21:39.320
Das ist also ein Anstatt Trigger.

223
21:39.380 --> 21:46.160
Dies bedeutet also, dass der Trigger anstelle der Anweisung ausgeführt wurde, nachdem ein Trigger nach der Ausführung der Anweisung geschehen würde.

224
21:46.160 --> 21:50.730
Und jetzt ist es an dir vorbei.

225
21:50.880 --> 21:56.690
Ihr Ziel ist es, einen Trigger zu erstellen, der verhindert, dass Benutzer die Tabelle "Buchänderungen" aktualisieren.

226
21:57.450 --> 21:59.360
So können Sie dieses Video auf ihr posten.

227
21:59.730 --> 22:01.980
Geben Sie dies aus und setzen Sie das Video fort.

228
22:01.980 --> 22:03.510
Sobald Sie diese Übung ausprobiert haben

229
22:06.550 --> 22:06.970
Okay.

230
22:06.990 --> 22:09.670
Ich hoffe also, dass Sie diese Übung in sausen lassen.

231
22:09.730 --> 22:14.050
Wenn Sie dieses Video noch nicht absehen und es fortsetzen, wenn Sie es ausprobiert haben.

232
22:15.840 --> 22:22.140
Unser Ziel ist es daher, einen Trigger zu erstellen, der verhindert, dass Benutzer die Tabelle "Buchänderungen" aktualisieren. in der vorherigen

233
22:22.740 --> 22:29.550
Demonstration haben wir gezeigt, wie löschvorgänge zu verhindern, aber natürlich war es möglich, dass jemand aktualisiert

234
22:29.580 --> 22:36.230
und ändern Sie den Änderungstyp oder das Datum, an dem sie aufgetreten sind.

235
22:36.230 --> 22:38.260
Daher werden wir einen weiteren Auslöser erstellen.

236
22:38.360 --> 22:44.090
So nennen Sie es; Trigger trgPreventUpdate erstellen 

237
22:46.670 --> 22:50.730
zu bookChanges

238
22:50.840 --> 22:51.220
gerade

239
22